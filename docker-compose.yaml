# ----------------------------
# docker-compose.yml para n8n
# ----------------------------

services:
  db:
    image: postgres:14
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_POSTGRESDB_USER}
      POSTGRES_PASSWORD: ${DB_POSTGRESDB_PASSWORD}
      POSTGRES_DB: ${DB_POSTGRESDB_DATABASE}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_POSTGRESDB_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - ./data/redis:/data
    command: redis-server --appendonly yes

  n8n:
    image: registry.apps.nomadiplus.net/n8n-super:latest
    restart: unless-stopped
    container_name: n8n-super
    depends_on:
      db:
        condition: service_healthy
    environment:
      COOLIFY_BRANCH: '"main"'
      COOLIFY_RESOURCE_UUID: n8n-super
      COOLIFY_CONTAINER_NAME: n8n-super
      SERVICE_URL_WAHA: 'http://n8n-super.apps3.nomadiplus.net'
      SERVICE_FQDN_WAHA: n8n-super.apps3.nomadiplus.net
      COOLIFY_URL: 'http://n8n-super.apps3.nomadiplus.net'
      COOLIFY_FQDN: n8n-super.apps3.nomadiplus.net
      # Database Configuration
      DB_TYPE: ${DB_TYPE}
      DB_POSTGRESDB_HOST: db
      DB_POSTGRESDB_PORT: ${DB_POSTGRESDB_PORT}
      DB_POSTGRESDB_DATABASE: ${DB_POSTGRESDB_DATABASE}
      DB_POSTGRESDB_USER: ${DB_POSTGRESDB_USER}
      DB_POSTGRESDB_PASSWORD: ${DB_POSTGRESDB_PASSWORD}

      # N8N Core Configuration
      N8N_SKIP_LICENSE_CHECK: ${N8N_SKIP_LICENSE_CHECK}
      N8N_DATABASE_MIGRATE: ${N8N_DATABASE_MIGRATE}
      GENERIC_TIMEZONE: ${GENERIC_TIMEZONE}

      # Authentication
      N8N_BASIC_AUTH_ACTIVE: ${N8N_BASIC_AUTH_ACTIVE}
      N8N_BASIC_AUTH_USER: ${N8N_BASIC_AUTH_USER}
      N8N_BASIC_AUTH_PASSWORD: ${N8N_BASIC_AUTH_PASSWORD}

      # Multi-tenant and Runners
      N8N_MULTI_TENANT_ENABLED: ${N8N_MULTI_TENANT_ENABLED}
      N8N_MULTI_TENANT_SUBDOMAIN_ENABLED: ${N8N_MULTI_TENANT_SUBDOMAIN_ENABLED}
      N8N_RUNNERS_ENABLED: ${N8N_RUNNERS_ENABLED}

      # Network Configuration
      N8N_HOST: ${N8N_HOST}
      N8N_PORT: ${N8N_PORT}
      N8N_PROTOCOL: ${N8N_PROTOCOL}
      WEBHOOK_URL: ${WEBHOOK_URL}
      N8N_EDITOR_BASE_URL: ${N8N_EDITOR_BASE_URL}

      # Security
      N8N_SECURE_COOKIE: ${N8N_SECURE_COOKIE}
      N8N_JWT_AUTH_HEADER: ${N8N_JWT_AUTH_HEADER}
      N8N_JWT_AUTH_HEADER_VALUE_PREFIX: ${N8N_JWT_AUTH_HEADER_VALUE_PREFIX}

      # Logging
      N8N_LOG_LEVEL: ${N8N_LOG_LEVEL}
      N8N_LOG_OUTPUT: ${N8N_LOG_OUTPUT}

      # Execution Settings
      EXECUTIONS_PROCESS: ${EXECUTIONS_PROCESS}
      EXECUTIONS_MODE: ${EXECUTIONS_MODE}
      EXECUTIONS_TIMEOUT: ${EXECUTIONS_TIMEOUT}
      EXECUTIONS_MAX_TIMEOUT: ${EXECUTIONS_MAX_TIMEOUT}
      EXECUTIONS_DATA_SAVE_ON_ERROR: ${EXECUTIONS_DATA_SAVE_ON_ERROR}
      EXECUTIONS_DATA_SAVE_ON_SUCCESS: ${EXECUTIONS_DATA_SAVE_ON_SUCCESS}
      EXECUTIONS_DATA_SAVE_ON_PROGRESS: ${EXECUTIONS_DATA_SAVE_ON_PROGRESS}
      EXECUTIONS_DATA_SAVE_MANUAL_EXECUTIONS: ${EXECUTIONS_DATA_SAVE_MANUAL_EXECUTIONS}

      # Queue Settings (Redis)
      QUEUE_BULL_REDIS_HOST: ${QUEUE_BULL_REDIS_HOST}
      QUEUE_BULL_REDIS_PORT: ${QUEUE_BULL_REDIS_PORT}
      QUEUE_BULL_REDIS_DB: ${QUEUE_BULL_REDIS_DB}

      # Email Configuration
      N8N_EMAIL_MODE: ${N8N_EMAIL_MODE}
      N8N_SMTP_HOST: ${N8N_SMTP_HOST}
      N8N_SMTP_PORT: ${N8N_SMTP_PORT}
      N8N_SMTP_SSL: ${N8N_SMTP_SSL}
      N8N_SMTP_USER: ${N8N_SMTP_USER}
      N8N_SMTP_PASS: ${N8N_SMTP_PASS}
      N8N_SMTP_SENDER: ${N8N_SMTP_SENDER}

      # Metrics
      N8N_METRICS: ${N8N_METRICS}
      N8N_METRICS_PREFIX: ${N8N_METRICS_PREFIX}

      # File Upload
      N8N_DEFAULT_BINARY_DATA_MODE: ${N8N_DEFAULT_BINARY_DATA_MODE}
      N8N_BINARY_DATA_TTL: ${N8N_BINARY_DATA_TTL}

    ports:
      - '${N8N_PORT}:${N8N_PORT}'
    volumes:
      - ./data/n8n:/home/node/.n8n
    labels:
      - coolify.managed=true
      - coolify.version=4.0.0-beta.420.6
      - coolify.applicationId=11
      - coolify.type=application
      - coolify.name=n8n-super
      - coolify.resourceName=n8n-super
      - coolify.projectName=personal-tools
      - coolify.serviceName=n8n-super
      - coolify.environmentName=production
      - coolify.pullRequestId=0
      - traefik.enable=true
      - traefik.http.middlewares.gzip.compress=true
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.routers.http-0-n8n-super.entryPoints=http
      - traefik.http.routers.http-0-n8n-super.middlewares=gzip
      - 'traefik.http.routers.http-0-n8n-super.rule=Host(`n8n-super.apps3.nomadiplus.net`) && PathPrefix(`/`)'
      - 'caddy_0.encode=zstd gzip'
      - 'caddy_0.handle_path.0_reverse_proxy={{upstreams}}'
      - 'caddy_0.handle_path=/*'
      - caddy_0.header=-Server
      - 'caddy_0.try_files={path} /index.html /index.php'
      - 'caddy_0=http://n8n-super.apps3.nomadiplus.net'
      - caddy_ingress_network=n8n-super
    

